/*
 * API products API
 *
 * An API product consists of a list of API resources (URIs) and custom metadata required by the API provider. API products enable you to bundle and distribute your APIs to multiple developer groups simultaneously without having to modify code. API products provide the basis for access control in Apigee, as they provide control over the set of API resources that apps are allowed to consume.   As part of the app provisioning workflow, developers select from a list of API products. This selection of an API product is usually made in the context of a developer portal. The developer app is provisioned with a key and secret (generated by and stored on Apigee Edge) that enable the app to access the URIs bundled in the selected API product. To access API resources bundled in an API product, the app must present the API key issued by Apigee Edge. Apigee Edge will resolve the key that is presented against an API product, and then check associated  API resources and quota settings.   The API supports multiple API products per app key, which enables app developers to consume multiple API products without requiring multiple keys. Also, a key can be 'promoted' from one API product to another. This enables you to promote developers from 'free' to 'premium' API products seamlessly and without user interruption. For more information, see <a href=\"https://docs.apigee.com/api-platform/publish/what-api-product\">What is an API product?</a>.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

// ApiProductRequest API product request.
type ApiProductRequest struct {
	// Comma-separated list of API resources to be bundled in the API product.  By default, the resource paths are mapped from the `proxy.pathsuffix` variable which is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product.  You can select a specific path, or you can select all subpaths with a wildcard (/&#42;&#42; and /&#42;). The double asterisk wildcard indicates that all sub-URIs are included. A single asterisk indicates that only URIs one level down are included. By default, / supports the same resources as /&#42;&#42; as plus the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on.  For more information, see: * <a href=\"https://docs.apigee.com/api-platform/publish/create-api-products\">Manage API products</a> for more information about managing API products and setting this value. * <a href=\"https://docs.apigee.com/api-platform/monetization/create-transaction-recording-policy#api\">Managing a transaction recording policy using the API</a> for information about setting this value when creating a transaction recording policy for monetization.
	ApiResources []string `json:"apiResources,omitempty"`
	// Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in \"pending\" state. In this case, the API keys won't work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in \"approved\" state and can be used immediately.  **Note**: Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities.
	ApprovalType string `json:"approvalType"`
	// Array of attributes that may be used to extend the default API product profile with customer-specific metadata. With Edge for Public Cloud, you can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal but can be accessed by external developers.  For monetization, you can use the attributes field to: * <a href=\"https://docs.apigee.com/api-platform/monetization/create-transaction-recording-policy#spectrpsuccessapi\">Specify transaction success criteria</a> * <a href=\"https://docs.apigee.com/api-platform/monetization/create-transaction-recording-policy#spectrpcaapi\">Specify custom attributes</a> on which you base rate plan charges</a>
	Attributes []Attribute `json:"attributes,omitempty"`
	// Description of the API product. Include key information about the API product.
	Description string `json:"description,omitempty"`
	// Name to be displayed in the UI or developer portal to developers registering for API access.
	DisplayName string `json:"displayName"`
	// Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.
	Environments []string `json:"environments,omitempty"`
	// Internal name of the API Product. Valid characters include: `A-Z0-9._\\-$ %`.  **Note**: The name is required when creating an API product. It cannot be edited when <a href=\"/docs/api-products/1/routes/organizations/%7Borg_name%7D/apiproducts/%7Bapiproduct_name%7D/put\">updating the API product</a>.
	Name string `json:"name,omitempty"`
	// Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Requests to API proxies not listed are rejected.  **Note**: The API proxy names must already exist in the specified environment as they will be validated upon creation.
	Proxies []string `json:"proxies,omitempty"`
	// Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.
	Quota string `json:"quota,omitempty"`
	// Time interval over which the number of request messages is calculated.
	QuotaInterval string `json:"quotaInterval,omitempty"`
	// Time unit defined for the `quotaInterval`.
	QuotaTimeUnit string `json:"quotaTimeUnit,omitempty"`
	// Comma-separated list of OAuth scopes that are validated at runtime. Apigee Edge validates that the scopes in any access token presented match the scopes defined in the OAuth policy assoicated with the API product.
	Scopes []string `json:"scopes,omitempty"`
}
